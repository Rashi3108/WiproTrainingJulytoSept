
Git Merge vs Rebase: Hands-on Exercise (Step-by-Step)

Pre-requisite:
- Ensure Git is installed. Run: git --version

===============================================
Step 1: Initialize a new repository
-----------------------------------------------
mkdir git-practice
cd git-practice
git init

Step 2: Create an initial commit
-----------------------------------------------
echo "Initial Project" > project.txt
git add .
git commit -m "Initial commit"

===============================================
Part 1: Git Merge
===============================================

Step 3: Create and switch to a feature branch
-----------------------------------------------
git checkout -b feature-merge

Step 4: Make changes in the feature branch
-----------------------------------------------
echo "Feature A - Line 1" >> project.txt
git commit -am "Added feature A"

Step 5: Switch to main and make a different change
-----------------------------------------------
git checkout main
echo "Main branch change - Line 2" >> project.txt
git commit -am "Updated main branch"

Step 6: Merge feature into main
-----------------------------------------------
git merge feature-merge

Step 7: Check the log
-----------------------------------------------
git log --oneline --graph

===============================================
Part 2: Git Rebase
===============================================

Step 8: Reset the repo (optional clean slate)
-----------------------------------------------
git reset --hard HEAD~2
git branch -D feature-merge

Step 9: Create the feature branch again
-----------------------------------------------
git checkout -b feature-rebase
echo "Feature B - Line 1" >> project.txt
git commit -am "Added feature B"

Step 10: Switch to main and make another change
-----------------------------------------------
git checkout main
echo "Another Main Change - Line 3" >> project.txt
git commit -am "Another update to main"

Step 11: Rebase feature branch onto main
-----------------------------------------------
git checkout feature-rebase
git rebase main

Step 12: Merge after rebase (optional)
-----------------------------------------------
git checkout main
git merge feature-rebase

Step 13: View the log
-----------------------------------------------
git log --oneline --graph

===============================================
Discussion Points:
- What happens to the commit history with merge vs rebase?
- When is it better to use rebase over merge?
- What are the risks of using rebase on shared branches?

===============================================
Optional Cleanup:
-----------------------------------------------
cd ..
rm -rf git-practice
